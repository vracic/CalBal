@model CalBal.ViewModels.KorisnikMasterDetailViewModel
@using Microsoft.AspNetCore.Mvc.ViewFeatures
@inject Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider MetadataProvider

@{
    ViewData["Title"] = "User Details (Master-Detail)";
}

<h2>Korisnicki podaci</h2>
<div>
    <h4>@Model.Korisnik.Ime @Model.Korisnik.Prezime</h4>
    <p>Email: @Model.Korisnik.Email</p>
    <p>Datum rodenja: @Model.Korisnik.DatumRodenja?.ToString("yyyy-MM-dd")</p>
    <p>Visina: @Model.Korisnik.Visina</p>
    <p>Tezina: @Model.Korisnik.Tezina</p>
    <p>Uloga: @Model.Korisnik.RazinaOvlasti</p>
    <a asp-action="Edit" asp-route-id="@Model.Korisnik.KorisnikId" class="btn btn-primary btn-sm">Uredi korisnika</a>
</div>

<hr />

<form method="get" asp-action="MasterDetail" class="row g-2 mb-3">
    <div class="col-auto">
        <input type="text" name="activitySearch" value="@Model.ActivitySearch" class="form-control" placeholder="Pretrazi aktivnosti..." />
    </div>
    <div class="col-auto">
        <input type="text" name="foodSearch" value="@Model.FoodSearch" class="form-control" placeholder="Pretrazi namirnice..." />
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Pretrazi</button>
    </div>
</form>

<h4>
    Provedba Aktivnosti
    <button class="btn btn-link btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#provedbaTableCollapse" aria-expanded="true" aria-controls="provedbaTableCollapse">
        Prikaži/Sakrij
    </button>
</h4>
<div class="collapse show" id="provedbaTableCollapse">
    @await Html.PartialAsync(
        "_AddProvedbaAktivnostPartial",
        new CalBal.Models.Provedbatjakt(),
        new ViewDataDictionary(MetadataProvider, ViewData.ModelState) { { "Aktivnosti", Model.SveAktivnosti }, { "KorisnikId", Model.Korisnik.KorisnikId } }
    )
    <div id="addProvedbaSuccess"></div>
    <table class="table">
        <thead>
            <tr>
                <th>Datum</th>
                <th>Aktivnost</th>
                <th>Trajanje (min)</th>
                <th>Potrosene kalorije</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model.Korisnik.Provedbatjakts)
        {
            <tr id="row-provedba-@p.ProvedbaTjAktId">
                <td>@p.Datum.ToString("yyyy-MM-dd")</td>
                <td>@p.Aktivnost?.Naziv</td>
                <td>@p.Trajanje</td>
                <td>@p.PotroseneKalorije.ToString("0.##")</td>
                <td>
                    <button class="btn btn-warning btn-sm" onclick="showEditProvedba(@p.ProvedbaTjAktId)">Uredi</button>
                    <button class="btn btn-danger btn-sm" onclick="deleteProvedba(@p.ProvedbaTjAktId)">Obrisi</button>
                </td>
            </tr>
            <tr id="edit-provedba-@p.ProvedbaTjAktId" style="display:none;">
                <form class="editProvedbaForm" data-id="@p.ProvedbaTjAktId">
                    <td>
                        <input type="hidden" name="ProvedbaTjAktId" value="@p.ProvedbaTjAktId" />
                        <input type="date" name="Datum" value="@p.Datum.ToString("yyyy-MM-dd")" class="form-control" />
                    </td>
                    <td>
                        <select name="AktivnostId" class="form-control">
                            @foreach (var a in Model.SveAktivnosti)
                            {
                                <option value="@a.AktivnostId" selected="@(a.AktivnostId == p.AktivnostId ? "selected" : null)">@a.Naziv</option>
                            }
                        </select>
                    </td>
                    <td>
                        <input type="number" name="Trajanje" value="@p.Trajanje" class="form-control" />
                    </td>
                    <td></td>
                    <td>
                        <button type="submit" class="btn btn-success btn-sm">Spremi</button>
                        <button type="button" class="btn btn-secondary btn-sm" onclick="hideEditProvedba(@p.ProvedbaTjAktId)">Odustani</button>
                    </td>
                </form>
            </tr>
        }
        </tbody>
    </table>
</div>

<h4>
    Unos Prehrambenih Namirnica
    <button class="btn btn-link btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#unosTableCollapse" aria-expanded="true" aria-controls="unosTableCollapse">
        Prikaži/Sakrij
    </button>
</h4>
<div class="collapse show" id="unosTableCollapse">
    @await Html.PartialAsync(
        "_AddUnosPrehrambenaNamirnicaPartial",
        new CalBal.Models.Unosprehnam(),
        new ViewDataDictionary(MetadataProvider, ViewData.ModelState) { { "PrehrambeneNamirnice", Model.SveNamirnice }, { "KorisnikId", Model.Korisnik.KorisnikId } }
    )
    <div id="addUnosSuccess"></div>
    <table class="table">
        <thead>
            <tr>
                <th>Datum</th>
                <th>Namirnica</th>
                <th>Kolicina</th>
                <th>Unesene kalorije</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var u in Model.Korisnik.Unosprehnams)
        {
            <tr id="row-unos-@u.UnosPrehNamId">
                <td>@u.Datum.ToString("yyyy-MM-dd")</td>
                <td>@u.Hrana?.Naziv</td>
                <td>@u.Kolicina</td>
                <td>@u.UneseneKalorije.ToString("0.##")</td>
                <td>
                    <button class="btn btn-warning btn-sm" onclick="showEditUnos(@u.UnosPrehNamId)">Uredi</button>
                    <button class="btn btn-danger btn-sm" onclick="deleteUnos(@u.UnosPrehNamId)">Obrisi</button>
                </td>
            </tr>
            <tr id="edit-unos-@u.UnosPrehNamId" style="display:none;">
                <form class="editUnosForm" data-id="@u.UnosPrehNamId">
                    <td>
                        <input type="hidden" name="UnosPrehNamId" value="@u.UnosPrehNamId" />
                        <input type="date" name="Datum" value="@u.Datum.ToString("yyyy-MM-dd")" class="form-control" />
                    </td>
                    <td>
                        <select name="HranaId" class="form-control">
                            @foreach (var n in Model.SveNamirnice)
                            {
                                <option value="@n.PrehrambenaNamirnicaId" selected="@(n.PrehrambenaNamirnicaId == u.HranaId ? "selected" : null)">@n.Naziv</option>
                            }
                        </select>
                    </td>
                    <td>
                        <input type="number" name="Kolicina" value="@u.Kolicina" class="form-control" />
                    </td>
                    <td></td>
                    <td>
                        <button type="submit" class="btn btn-success btn-sm">Spremi</button>
                        <button type="button" class="btn btn-secondary btn-sm" onclick="hideEditUnos(@u.UnosPrehNamId)">Odustani</button>
                    </td>
                </form>
            </tr>
        }
        </tbody>
    </table>
</div>

@section Scripts {
<script>
    // Helper for rendering model errors from any response format
    function renderModelErrors(response, targetSelector) {
        let errors = null;
        if (response) {
            if (response.errors) {
                errors = response.errors;
            } else {
                errors = response;
            }
        }
        if (errors) {
            let errorList = '<ul>';
            for (let key in errors) {
                for (let msg of errors[key]) {
                    errorList += '<li>' + msg + '</li>';
                }
            }
            errorList += '</ul>';
            $(targetSelector).html('<div class="alert alert-danger">' + errorList + '</div>');
        } else {
            $(targetSelector).html('<div class="alert alert-danger">An error occurred.</div>');
        }
    }

    // Show/hide edit forms
    function showEditProvedba(id) {
        $('#row-provedba-' + id).hide();
        $('#edit-provedba-' + id).show();
    }
    function hideEditProvedba(id) {
        $('#edit-provedba-' + id).hide();
        $('#row-provedba-' + id).show();
    }
    function showEditUnos(id) {
        $('#row-unos-' + id).hide();
        $('#edit-unos-' + id).show();
    }
    function hideEditUnos(id) {
        $('#edit-unos-' + id).hide();
        $('#row-unos-' + id).show();
    }

    // AJAX update for Provedba
    $('.editProvedbaForm').submit(function (e) {
        e.preventDefault();
        var form = $(this);
        $.ajax({
            url: '@Url.Action("Update", "Provedbatjakt")',
            type: 'POST',
            data: form.serialize(),
            success: function () {
                location.reload();
            },
            error: function (xhr) {
                let response = xhr.responseJSON;
                if (!response && xhr.responseText) {
                    try { response = JSON.parse(xhr.responseText); } catch (e) { }
                }
                renderModelErrors(response, form.next('.editProvedbaResult'));
            }
        });
    });

    // AJAX update for Unos
    $('.editUnosForm').submit(function (e) {
        e.preventDefault();
        var form = $(this);
        $.ajax({
            url: '@Url.Action("Update", "Unosprehnam")',
            type: 'POST',
            data: form.serialize(),
            success: function () {
                location.reload();
            },
            error: function (xhr) {
                let response = xhr.responseJSON;
                if (!response && xhr.responseText) {
                    try { response = JSON.parse(xhr.responseText); } catch (e) { }
                }
                renderModelErrors(response, form.next('.editUnosResult'));
            }
        });
    });

    // AJAX delete for Provedba
    function deleteProvedba(id) {
        if (!confirm('Jeste li sigurni da zelite obrisati aktivnost?')) return;
        $.ajax({
            url: '@Url.Action("Delete", "Provedbatjakt")',
            type: 'POST',
            data: { id: id },
            success: function () {
                $('#row-provedba-' + id).remove();
                $('#edit-provedba-' + id).remove();
                $('#addProvedbaSuccess').html('<div class="alert alert-success">Uspjesno obrisana aktivnost!</div>');
            },
            error: function (xhr) {
                let response = xhr.responseJSON;
                if (!response && xhr.responseText) {
                    try { response = JSON.parse(xhr.responseText); } catch (e) { }
                }
                renderModelErrors(response, '#addProvedbaResult');
            }
        });
    }

    // AJAX delete for Unos
    function deleteUnos(id) {
        if (!confirm('Jeste li sigurni da zelite obrisani unos namirnice?')) return;
        $.ajax({
            url: '@Url.Action("Delete", "Unosprehnam")',
            type: 'POST',
            data: { id: id },
            success: function () {
                $('#row-unos-' + id).remove();
                $('#edit-unos-' + id).remove();
                $('#addUnosSuccess').html('<div class="alert alert-success">Uspjesno obrisan unos namirnice!</div>');
            },
            error: function (xhr) {
                let response = xhr.responseJSON;
                if (!response && xhr.responseText) {
                    try { response = JSON.parse(xhr.responseText); } catch (e) { }
                }
                renderModelErrors(response, '#addUnosResult');
            }
        });
    }

    // Add Activity
    $('#addProvedbaForm').submit(function (e) {
        e.preventDefault();
        $.ajax({
            url: '@Url.Action("Add", "Provedbatjakt")',
            type: 'POST',
            data: $(this).serialize(),
            success: function (result) {
                location.reload();
            },
            error: function (xhr) {
                let response = xhr.responseJSON;
                if (!response && xhr.responseText) {
                    try { response = JSON.parse(xhr.responseText); } catch (e) { }
                }
                renderModelErrors(response, '#addProvedbaResult');
            }
        });
    });

    // Add Food Entry
    $('#addUnosForm').submit(function (e) {
        e.preventDefault();
        $.ajax({
            url: '@Url.Action("Add", "Unosprehnam")',
            type: 'POST',
            data: $(this).serialize(),
            success: function (result) {
                $('#addUnosResult').html('<div class="alert alert-success">Food entry added!</div>');
                location.reload();
            },
            error: function (xhr) {
                let response = xhr.responseJSON;
                if (!response && xhr.responseText) {
                    try { response = JSON.parse(xhr.responseText); } catch (e) { }
                }
                renderModelErrors(response, '#addUnosResult');
            }
        });
    });
</script>
}